Compilation instructions for TUPAC:

 * Edit your .bashrc file and add the following lines (using <USER> as a placeholder for your actual username):

module load cmake/3.9.6
module load gcc/5.4.0
module load python/2.7.14

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/<USER>/libs/cln-1.3.4/src/.libs:/home/<USER>/libs/boost/lib:/home/<USER>/libs/libconfig-1.7.2/lib/.libs
export LIBRARY_PATH=$LIBRARY_PATH:/home/<USER>/libs/cln-1.3.4/src/.libs:/home/<USER>/libs/boost/lib:/home/<USER>/libs/libconfig-1.7.2/lib/.libs

export C_INCLUDE_PATH=$C_INCLUDE_PATH:/home/<USER>/libs/libconfig-1.7.2/lib
export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/home/<USER>/libs/cln-1.3.4/include:/home/<USER>/libs/boost/include

export CLN_CFLAGS=-I/home/<USER>/libs/cln-1.3.4/include
export CLN_LIBS=/home/<USER>/libs/cln-1.3.4/src/.libs/libcln.so

export BOOST_ROOT=/home/<USER>/libs/boost

 * Reload .bashrc (source ~/.bashrc)
 * Create a new subdirectory named 'libs' in your home directory
 * Download the following libraries into this directory:
   * https://www.ginac.de/CLN/cln-1.3.4.tar.bz2
   * https://hyperrealm.github.io/libconfig/dist/libconfig-1.7.2.tar.gz
   * https://downloads.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.gz
   * https://rpmfind.net/linux/Mandriva/devel/cooker/x86_64/media/contrib/release/bison++-1.21.8-10mdv2011.0.x86_64.rpm
 * Decompress and compile them:
   * ./configure + make for the first two
   * For boost:
     * ./bootstrap.sh --prefix=/home/<USER>/libs/boost
     * ./b2 install
   * For bison++:
     * rpm2cpio ./bison++-1.21.8-10mdv2011.0.x86_64.rpm | cpio -idmv
 * Edit src/Makefile:
   * Comment out all lines that check out repositories (rules *-repo)
   * Comment out the SBML interface commands
   * If commented, enable the release mode compilation for the engine
   * Comment out the commands for GUI compilation (rule qss-solver-gui and the line in the install rule)
   * Comment out the commands for documentation
 * Edit src/engine/Makefile:
   * Replace the line that compiles CGAL with the following:
     cd ./cgal-releases-CGAL-4.14-beta2/build; cmake .. -DCMAKE_BUILD_TYPE=Release -DBoost_INCLUDE_DIR=${BOOST_ROOT}/include -DBoost_LIBRARY_DIRS=${BOOST_ROOT}/lib -DCGAL_INSTALL_LIB_DIR=lib -DCMAKE_INSTALL_PREFIX=../../$(USRDIR)
 * Edit src/mmoc/Makefile:
   * Set the BISON variable to /home/<USER>/libs/usr/bin/bison++
 * Edit the bison++ binary (/home/<USER>/libs/usr/bin/bison++):
   * Search '/usr/lib/bison.cc' and replace that path with a path to your home of the exact same length (e.g., /home/lsanti/b.cc)
     * If not possible, try using /tmp
   * Copy libs/usr/lib64/bison.cc to the path used above
   * Repeat these steps for bison.h
 * Go to src and execute make
   * If compilation fails when the parser is being built, try editing mmoc/parser/mocc_scanner.cpp and comment out line 32 (#define yyFlexLexer yyFlexLexer)
 * Execute make install
 * Go to deploy (inside the root directory of QSS Solver) and execute:
   * ./linux/scripts/registervars.sh

ADDITIONAL NOTES:
 * If mmoc crashes when parsing a model, try editing src/mmoc/util/error.cpp and search the Error::add method
   * Comment out lines that make use of the variadic argument list (va_start,...,va_end)
   * Now recompile inside src
 * If mmoc ends abruptly with an error while accessing the file '/tmp/t', do the following:
   * Edit src/mmoc/parser/parse.cpp
   * Replace all ocurrences of /tmp/t with /tmp/<some_random_characters>
   * Recompile
 * If the same as above happens with file '/tmp/temp' do those steps inside file src/mmoc/generator/generator_utils.cpp




